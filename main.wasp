app Roulette {
  wasp: {
    version: "^0.11.1"
  },
  title: "Roulette",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int    @id @default(autoincrement())
    username String @unique
    password String
    bets     Bet[]
psl=}

entity Bet {=psl
    id     Int  @id @default(autoincrement())
    amount Int
    number Int
    user   User @relation(fields: [userId], references: [id])
    userId Int
psl=}

action placeBet {
  fn: import { placeBet } from "@server/actions.js",
  entities: [User, Bet]
}

action spinWheel {
  fn: import { spinWheel } from "@server/actions.js",
  entities: []
}

query getUserBets {
  fn: import { getUserBets } from "@server/queries.js",
  entities: [User, Bet]
}

query getUserBalance {
  fn: import { getUserBalance } from "@server/queries.js",
  entities: [User, Bet]
}

route RouletteRoute { path: "/", to: RoulettePage }
page RoulettePage {
  component: import { Roulette } from "@client/pages/Roulette.jsx",
  authRequired: true
}
